version: '3'
services:
  web:
    build: .
    container_name: reflexivity_web
    # need the sleep to wait for the DB service to get up and running
    command: ["./wait-for-database.sh", "database", "5432", "--", "bundle exec rails s -b 0.0.0.0 -p 3000"]
    depends_on:
      - database
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgres://database:5432}
      - IPFS_SERVER=${IPFS_SERVER}
      - HOSTNAME=${HOSTNAME}
      - RAILS_ENV=${RAILS_ENV}
      - RAILS_SERVE_STATIC_FILES=${RAILS_SERVE_STATIC_FILES}
      - SECRET_KEY_BASE=${SECRET_KEY_BASE}
      - HTTP_PORT=${HTTP_PORT}
      - SHARE_CONTENT_HOST_DIR=${SHARE_CONTENT_HOST_DIR}
      - SHARE_CONTENT_CONTAINER_IPFS_FILES_DIR=${SHARE_CONTENT_CONTAINER_IPFS_FILES_DIR}
      - SHARE_CONTENT_CONTAINER_UNPROCESSED_FILES_DIR=${SHARE_CONTENT_CONTAINER_UNPROCESSED_FILES_DIR}
    networks:
      - ipfs_localhost
      - reflexivity
    ports:
      - ${HTTP_PORT:-80}:3000
    stdin_open: true
    tty: true
    volumes:
      - ./:/app
      - ${SHARE_CONTENT_HOST_DIR}:/share_content

  # See the setup instructions https://hub.docker.com/_/postgres/
  # Database initialized with the command:
  #  $ docker-compose run -e POSTGRES_PASSWORD=<$DB_PASSWORD> database postgres
  #  $ psql -h localhost -p 5444 -U reflexivity_development < ./data/postgres_backups/reflexivity_development_20180131.sql
  database:
    container_name: reflexivity_database
    image: "postgres:9.6.5-alpine"
    environment:
      HOSTNAME: ${HOSTNAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DB_DATA_DIR: ${DB_DATA_DIR}
    networks:
      - reflexivity
#    ports:
#      - "5444:5432"
    volumes:
      - "./data/postgres_data_965:${DB_DATA_DIR}"
      - "./data/postgres_backups:/postgres_backups"

  # console is at http://localhost:5001/webui
  ipfs:
    container_name: ipfs
    command: "daemon --migrate=true --enable-namesys-pubsub"
    environment:
      IPFS_FD_MAX: 32768
    image: "jbenet/go-ipfs:master"
    networks:
      - ipfs_localhost
    ports:
      - "8080:8080"
      - "4001:4001"
      - "127.0.0.1:5001:5001"
    volumes:
      - "./data/docker-ipfs-data:/data/ipfs"
      - ${SHARE_CONTENT_HOST_DIR}:/share_content

networks:
  reflexivity:
  ipfs_localhost:
    external: true
